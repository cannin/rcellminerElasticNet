?cor.test
?quantile
?setNames
?cor.test
?lm
?setNames
?predict
library(rcellminerElasticNet)
mtcars
featureMat <- mtcars[, -1]
responseVec <- mtcars[, 1]
elNetResults <- elasticNet(featureMat = featureSet,
responseVec = responseVec,
id = "Example",
alphaVals = seq(0.2, 1, length = 10),
useLambdaMin = TRUE,
cumCorNumPredictors = maxPlotPredictors,
verbose = FALSE,
standardize = FALSE,
useOneStdErrRule = TRUE)
featureSet <- mtcars[, -1]
responseVec <- mtcars[, 1]
elNetResults <- elasticNet(featureMat = featureSet,
responseVec = responseVec,
id = "Example",
alphaVals = seq(0.2, 1, length = 10),
useLambdaMin = TRUE,
cumCorNumPredictors = maxPlotPredictors,
verbose = FALSE,
standardize = FALSE,
useOneStdErrRule = TRUE)
featureSet <- t(mtcars[, -1])
responseVec <- mtcars[, 1]
elNetResults <- elasticNet(featureMat = featureSet,
responseVec = responseVec,
id = "Example",
alphaVals = seq(0.2, 1, length = 10),
useLambdaMin = TRUE,
cumCorNumPredictors = maxPlotPredictors,
verbose = FALSE,
standardize = FALSE,
useOneStdErrRule = TRUE)
featureSet <- t(mtcars[, -1])
responseVec <- mtcars[, 1]
maxPredictors <- 3
elNetResults <- elasticNet(featureMat = featureSet,
responseVec = responseVec,
id = "Example",
alphaVals = seq(0.2, 1, length = 10),
useLambdaMin = TRUE,
cumCorNumPredictors = maxPredictors,
verbose = FALSE,
standardize = FALSE,
useOneStdErrRule = TRUE)
elNetResults
elNetResults$predictorWts_preModelSelection
elNetResults$predictorSelectionFreq_preModelSelection
elNetResults$predictorWts
elNetResults$predictorSelectionFreq
library(rcellminerElasticNet)
elNetResults
?elasticNet
featureSet <- t(mtcars)
responseVec <- mtcars[, 1]
maxPredictors <- 3
elNetResults <- elasticNet(featureMat = featureSet,
responseVec = responseVec,
id = "Example",
alphaVals = seq(0.2, 1, length = 10),
useLambdaMin = TRUE,
cumCorNumPredictors = maxPredictors,
verbose = FALSE,
standardize = FALSE,
useOneStdErrRule = TRUE)
predictedResponseVec <- elNetResults$predictedResponse %>% rowSums
cr <- cor(predictedResponseVec, responseVec)
featureSet <- t(mtcars)
responseVec <- mtcars[, 1]
maxPredictors <- 3
elNetResults <- elasticNet(featureMat = featureSet,
responseVec = responseVec,
id = "Example",
alphaVals = seq(0.2, 1, length = 10),
useLambdaMin = TRUE,
cumCorNumPredictors = maxPredictors,
nCvRepeats = 3,
nTrainingRuns = 10,
verbose = FALSE,
standardize = FALSE,
useOneStdErrRule = TRUE)
predictedResponseVec <- elNetResults$predictedResponse %>% rowSums
cr <- cor(predictedResponseVec, responseVec)
elNetResults <- elasticNet(featureMat = featureSet,
responseVec = responseVec,
id = "Example",
alphaVals = seq(0.2, 1, length = 10),
useLambdaMin = TRUE,
cumCorNumPredictors = maxPredictors,
nCvRepeats = 3,
nTrainingRuns = 10,
verbose = FALSE,
standardize = FALSE,
useOneStdErrRule = TRUE)
predictedResponseVec <- rowSums(elNetResults$predictedResponse)
cr <- cor(predictedResponseVec, responseVec)
cr
plot(predictedResponseVec, responseVec)
elNetResults$predictorWts
1-(1/10)
0.9*13
20*0.95
50*0.95
